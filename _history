{"entries":[{"timestamp":1753367647438,"editorVersion":"2.0.56","changes":[{"type":"edited","filename":"main.blocks","patch":[{"start1":0,"length1":131,"diffs":[[1,"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <variables></variables>\n  <block type=\"pxt-on-start\" x=\"0\" y=\"0\"></block>\n</xml>"]]}]},{"type":"edited","filename":"main.ts","patch":[{"start1":0,"length1":3394,"diffs":[[1," "]]}]},{"type":"edited","filename":"pxt.json","patch":[{"start1":203,"length1":31,"diffs":[[1,"    \"additionalFilePaths\": []\n"]]}]}]},{"timestamp":1753368223692,"editorVersion":"2.0.56","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":0,"length1":69,"diffs":[[1,"// Friday Night Funkin' Style Rhythm Game for MakeCode Arcade (Working Version)\n"]]},{"start1":81,"length1":0,"diffs":[[1,"// == ENUMS & UTILITIES ==\n"]]},{"start1":166,"length1":31,"diffs":[[1,"enum Accuracy {\n    Perfect,\n    Good,\n    Miss\n}\n\n"]]},{"start1":296,"length1":1139,"diffs":[[1,"        case Direction.Up: return img`...`;\n        case Direction.Down: return img`...`;\n        case Direction.Left: return img`...`;\n        case Direction.Right: return img`...`;\n"]]},{"start1":595,"length1":119,"diffs":[[1,"// == NOTE CREATION ==\ntype Note = {\n    sprite: Sprite,\n    direction: Direction\n"]]},{"start1":681,"length1":95,"diffs":[[1,"function createNote(direction: Direction, yOffset: number): Note {\n"]]},{"start1":941,"length1":18,"diffs":[[1,"// == GAME VARIABLES ==\n"]]},{"start1":1080,"length1":34,"diffs":[[1,"let activeNotes: Note[] = [];\n"]]},{"start1":1166,"length1":35,"diffs":[[1,"let feedbackText: Sprite = null;\nlet isChartEditor = false;\nlet editorChart: Direction[] = [];\n"]]},{"start1":1331,"length1":21,"diffs":[[1,"// == TITLE SCREEN ==\n"]]},{"start1":1415,"length1":65,"diffs":[[1,"    game.splash(\"ðŸŽ¶ FNF: MakeCode Remix ðŸŽ¶\", \"A = Play  |  B = Chart Editor\");\n"]]},{"start1":1562,"length1":0,"diffs":[[1,"    controller.B.onEvent(ControllerButtonEvent.Pressed, () => {\n        isChartEditor = true;\n        enterChartEditor();\n    });\n"]]},{"start1":1695,"length1":31,"diffs":[[1,"// == CHART EDITOR ==\nfunction enterChartEditor() {\n    scene.setBackgroundColor(8);\n    editorChart = [];\n    game.splash(\"ðŸŽ¼ Chart Editor Mode ðŸŽ¼\", \"Use arrows to add.\\nA = Export, B = Play\");\n    controller.left.onEvent(ControllerButtonEvent.Pressed, () => editorChart.push(Direction.Left));\n    controller.right.onEvent(ControllerButtonEvent.Pressed, () => editorChart.push(Direction.Right));\n    controller.up.onEvent(ControllerButtonEvent.Pressed, () => editorChart.push(Direction.Up));\n    controller.down.onEvent(ControllerButtonEvent.Pressed, () => editorChart.push(Direction.Down));\n    controller.A.onEvent(ControllerButtonEvent.Pressed, () => {\n        game.splash(\"Chart Output:\", JSON.stringify(editorChart));\n    });\n    controller.B.onEvent(ControllerButtonEvent.Pressed, () => {\n        songBeats = editorChart;\n        startGame();\n    });\n}\n\n// == STORY + SPRITES ==\n"]]},{"start1":2651,"length1":235,"diffs":[[1,"    player = sprites.create(img`...`, SpriteKind.Player);\n"]]},{"start1":2742,"length1":237,"diffs":[[1,"    opponent = sprites.create(img`...`, SpriteKind.Player);\n"]]},{"start1":2838,"length1":178,"diffs":[[1,"    let intro = textsprite.create(\"WEEK \" + (level + 1), 0, 1);\n    intro.setPosition(80, 20);\n    pause(2000);\n    intro.destroy();\n"]]},{"start1":2974,"length1":29,"diffs":[[1,"// == MUSIC + CHARTS ==\n"]]},{"start1":3094,"length1":148,"diffs":[[1,"        songBeats = [Direction.Left, Direction.Up, Direction.Right, Direction.Down,\n        Direction.Up, Direction.Down, Direction.Left, Direction.Right];\n"]]},{"start1":3369,"length1":2941,"diffs":[[1,"        songBeats = [Dire"]]}]}]},{"timestamp":1753368721956,"editorVersion":"2.0.56","changes":[{"type":"edited","filename":"main.blocks","patch":[{"start1":0,"length1":84,"diffs":[[1,"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"0\" y=\"0\"></block></xml>"]]}]},{"type":"edited","filename":"pxt.json","patch":[{"start1":203,"length1":44,"diffs":[[1,""]]}]},{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"}]}],"snapshots":[{"timestamp":1753367647437,"editorVersion":"2.0.56","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <variables></variables>\n  <block type=\"pxt-on-start\" x=\"0\" y=\"0\"></block>\n</xml>","main.ts":" ","README.md":" ","assets.json":"","pxt.json":"{\n    \"name\": \"game\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"device\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"assets.json\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}}],"shares":[],"lastSaveTime":1753368974524}